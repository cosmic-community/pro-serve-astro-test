---
import type { Service } from '../types';

export interface Props {
  service: Service;
}

const { service } = Astro.props;
---

<div class="bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden">
  {service.metadata?.featured_image && (
    <div class="aspect-w-16 aspect-h-9">
      <img 
        src={`${service.metadata.featured_image.imgix_url}?w=800&h=400&fit=crop&auto=format,compress`}
        alt={service.metadata?.name || service.title}
        class="w-full h-48 object-cover"
        loading="lazy"
      />
    </div>
  )}
  
  <div class="p-6">
    <h3 class="text-xl font-semibold text-gray-900 mb-2">
      {service.metadata?.name || service.title}
    </h3>
    
    <p class="text-gray-600 mb-4 line-clamp-3">
      {service.metadata?.short_description}
    </p>
    
    {service.metadata?.starting_price && (
      <div class="text-primary-600 font-semibold mb-4">
        Starting at {service.metadata.starting_price}
      </div>
    )}
    
    {service.metadata?.features && service.metadata.features.length > 0 && (
      <ul class="text-sm text-gray-600 mb-6 space-y-1">
        {service.metadata.features.slice(0, 3).map((feature: string) => (
          <li class="flex items-center">
            <svg class="h-4 w-4 text-green-500 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
            {feature}
          </li>
        ))}
      </ul>
    )}
    
    <a 
      href={`/services/${service.slug}`}
      class="inline-flex items-center text-primary-600 hover:text-primary-700 font-medium"
    >
      Learn More
      <svg class="ml-1 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
    </a>
  </div>
</div>